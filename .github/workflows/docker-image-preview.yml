name: Docker image deployment process in IBM Cloud Code Engine

on:
  workflow_call:
    inputs:
      CONTAINER_REGISTRY_NAMESPACE:
        required: true
        type: string
      CODE_ENGINE_PROJECT:
        required: true
        type: string
      CODE_ENGINE_REGISTRY_SECRET:
        required: true
        type: string
      DOCKER_IMAGE_NAME:
        required: true
        type: string
      DOCKER_IMAGE_PORT:
        required: true
        type: string
      IBMCLOUD_REGION:
        required: true
        type: string
      IBMCLOUD_RESOURCE_GROUP:
        required: true
        type: string
      PR_TAG:
        required: true
        type: string
    secrets:
      IBMCLOUD_ACCOUNT:
        required: true
      IBMCLOUD_API_KEY:
        required: true

jobs:
  docker-image-preview:
    runs-on: ubuntu-latest
    env:
      APP_NAME: ${{ inputs.DOCKER_IMAGE_NAME }}-${{ inputs.PR_TAG }}
      DOCKER_IMAGE_TAG: icr.io/${{ inputs.CONTAINER_REGISTRY_NAMESPACE }}/${{ inputs.DOCKER_IMAGE_NAME }}:${{ inputs.PR_TAG }}
    
    steps:
      - name: Fetch content of the PR
        id: fetch_content
        uses: actions/checkout@v2

      - name: GH deployment status (start)
        id: gh_deployment
        uses: bobheadxi/deployments@v0.4.3
        with:
          step: start
          token: ${{ github.token }}
          env: ${{ env.APP_NAME }}
          auto_inactive: true
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Setup IBM Cloud CLI
        id: ibmcloud_cli_setup
        run: |
          curl -fsSL https://clis.cloud.ibm.com/install/linux | sh
          ibmcloud --version
          ibmcloud config --check-version=false
          ibmcloud plugin install -f code-engine
          ibmcloud plugin install -f container-registry
      
      - name: Authenticate with IBM Cloud CLI
        id: ibmcloud_authentication
        run: |
          ibmcloud login -g "${{ inputs.IBMCLOUD_RESOURCE_GROUP }}" -r "${{ inputs.IBMCLOUD_REGION }}" -c "${{ secrets.IBMCLOUD_ACCOUNT }}" --apikey "${{ secrets.IBMCLOUD_API_KEY }}"
      
      - name: Remove previous Docker image (if exists)
        id: clean_docker_image
        run: |
          ibmcloud cr region-set global
          if ibmcloud cr image-list | grep "${{ inputs.DOCKER_IMAGE_NAME }}" | grep "${{ inputs.PR_TAG }}" ; then
            ibmcloud cr image-rm "${{ env.DOCKER_IMAGE_TAG }}"
          else
            echo "no image to remove"
          fi
      
      - name: Log-in into IBM Container Registry
        id: container_regristry_authentication
        uses: docker/login-action@v1
        with:
          registry: icr.io
          username: iamapikey
          password: ${{ secrets.IBMCLOUD_API_KEY }}

      - name: Build and push to IBM registry
        id: build_push_to_cr
        uses: docker/build-push-action@v2.6.1
        with:
          push: true
          tags: ${{ env.DOCKER_IMAGE_TAG }}
          cache-from: type=registry,ref=${{ env.DOCKER_IMAGE_TAG }}
          cache-to: type=inline
      
      - name: Determine Code Engine project and app status
        id: ce_command_choice
        run: |
          ibmcloud ce project select -n "${{ inputs.CODE_ENGINE_PROJECT }}"
          if ibmcloud ce app list -q | grep "${{ env.APP_NAME }}" ; then
            echo "::set-output name=command::update"
          else
            echo "::set-output name=command::create"
          fi
      
      - name: Create a new preview application in Code Engine
        id: ce_app_creation
        run: |
          ibmcloud ce app ${{ steps.ce_command_choice.outputs.command }} \
            --name "${{ env.APP_NAME }}" \
            --image "${{ env.DOCKER_IMAGE_TAG }}" \
            --registry-secret "${{ inputs.CODE_ENGINE_REGISTRY_SECRET }}" \
            --port "${{ inputs.DOCKER_IMAGE_PORT }}" \
            --cpu 0.25 \
            --memory 0.5G \
            --min 1
          echo "::set-output name=preview_url::$(\
            ibmcloud ce app get --name "${{ env.APP_NAME }}" --output url
          )"
      
      - name: GH deployment status (finish)
        id: gh_deplyment_finish
        uses: bobheadxi/deployments@v0.4.3
        if: always()
        with:
          step: finish
          token: ${{ github.token }}
          status: ${{ job.status }}
          deployment_id: ${{ steps.gh_deployment.outputs.deployment_id }}
          env_url: "${{ steps.ce_app_creation.outputs.preview_url }}/course/introduction"
